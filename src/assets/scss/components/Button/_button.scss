@use '../../utilities/utils-variables';
@use '../../utilities/mixin';
@use './variables';
@use 'sass:map';
@use 'sass:string';
@tailwind base;
@tailwind components;
@tailwind utilities;

@function map-deep-get($map, $keys) {
  $value : null;
  @each $key in $keys {
    $map: map.get($map, $key);
  }
  @return $map;
}

@mixin get-button-size($size) {
  $size: map-deep-get(variables.$button-sizes, $size);
  @each $key in map.keys($size) {
    @apply #{map.get($size, $key)};
  }
}

@layer base {
  .btn {
    
    @apply relative font-semibold tracking-wide flex justify-center items-center border-2 rounded-[5px] h-[36px] px-[1rem] transition duration-100 ease-out hover:ease-in text-[.85rem];

    a {
      @apply tracking-wide text-[14px];
    }

    &.btn-sm {
      @include get-button-size('sm');

      // a {
      //   @apply tracking-wider text-xs leading-[24px];
      // }
    }

    &.btn-lg {
      @include get-button-size('lg');
      // @apply h-[40px] px-[19px];

      // a {
      //   @apply tracking-wide text-lg;
      // }
    }
  }
}

@layer components {
  @each $color in utils-variables.$colors {
    .btn-#{$color} {
      @include mixin.get-color($color);
    }
    
    @each $variant in utils-variables.$variants {
      .btn-#{$color}.btn-#{$variant} {
        @include mixin.get-variant($variant, $color);

        &:not([disabled]):hover {
          @include mixin.get-hover-color($variant, $color);
        };
      
      }
    }
  }

  
}

// @layer utilities {
//   @each $color in variables.$colors {
//     @if $color == 'plain' {
//       .btn-plain {
//         @include mixin.variant-plain;
//       }
//     } @else {
//       .btn-#{$color} {
//         @debug get-color($color);
//         @apply outline-none border-none dark:bg-#{$color}-500/90 bg-#{$color}-500;

//         &:not([disabled]):hover {
//           @apply bg-#{$color}-600;
//         };

//         a {
//           @apply text-light;
//         }
//       }
//     }
//   } 

//   @each $color in variables.$colors {
//     .btn-outline-#{$color} {
//       @apply bg-none border-[2px] p-[10px] dark:border-#{$color}-400/40 border-#{$color}-500;

//       &:not([disabled]):hover {
//         @if $color == 'secondary' {
//           @apply hover:bg-#{$color}-200 dark:hover:bg-#{$color}-700/50;
//         } @else {
//           @apply hover:bg-#{$color}-100 dark:hover:bg-#{$color}-500/10;
//         }
//       }

//       a {
//         @apply dark:text-#{$color}-400/90 text-#{$color}-500;
//       }
//     }
//   }

//   .btn-icon-circle {
//     @apply p-[12px] rounded-full;
    
//     a > span > svg {
//       @apply m-0;
//     }

//     @each $color in variables.$colors {
//       &.btn-#{$color} {
//         &.btn-sm {
//           @apply p-[9px];
//         }

//         &.btn-lg {
//           @apply p-[14px];
//         }
//       }
//     }

//     @each $color in variables.$colors {
//       &.btn-outline-#{$color} {
//         @apply p-[10px];

//         &.btn-sm {
//           @apply p-[7px];
//         }

//         &.btn-lg {
//           @apply p-[12px];
//         }
//       }
//     }
//   }
// }

.rounded {
  @apply rounded-full;
}
